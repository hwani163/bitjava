교육센터 DB 모델링
[논리 모델 작성]
1. model01.exerd
	-	수강신청 테이블 식별
	- Primary Key 지정!
	
	PrimaryKey지정방법
	 키컬럼 식별 => Candidate Key 식별 => Primary Key 결정
1) 키 컬럼식별
	데이터를 구분할 때 사용할 한개이상의 컬럼을 지정!
	예) [수강생이름 , 강사명 , 매니저명] <-key
		[강의명 , 강사명 , 강의시작일 , 수강생명 , 수강생전화]<-KEY
		[강의명 , 강의시작일 , 수강생이메일] <-KEY
		[강의명 , 강의시작일 , 강사전화] <-KEY
		
		
2)Candidate key(최소키) 선별 ; Unique KEY
	.	Key를 최소의 컬럼으로 정리한 것.
	. PRIMARY KEY 의 후보자
	. PRIMARY KEY 로 선택되지 않는 후보키는 유니크 키가 된다.
	예)	[강의명 , 강의시작일 , 수강생이메일] <-CANDIDATE KEY
		[강의명 , 강의시작일 , 강사전화] <-CANDIDATE KEY
		
3)Primary KEY 선정
 	.	DBA CandidateKEY중에서 실제로 사용할 키를 결정!!
 	
4) 도저히 Primary KEY를 결정 할 수 없을 때!!
	.	임의의 컬럼을 만들어 KEY로 설정하여라
	
	
	model01 에서 "수강신청" 테이블의 PK를 뽑기가 애매하다. => 그래서 임의의 컬럼 수강신천번호를 생성하고 PK로 지정한다.
	
	
	2.model02.exerd
	- 제1정규화 수행.
	- 중복 컬럼이나 값이 있다면 분리하여 별도 테이블로 만들고 부모 자식 관계를 맺는다.
	1) 중복컬럼 : 교실사진1 , 교실사진2 , 교실사진3
		=>문제점 : 사진을 3개 초과하여 넣을 수 없다.
						사진을 하나만 넣을 때는 두개의 컬럼이 빈채로 낭비된다.
		=>해결책 : 별도 테이블(테이블명 : 교실사진테이블)로 분리하여 부모 자식 관계를 맺는다.
	2) 값 중복 : 강의 정보가
					 문제점 : 똑같은 값이 레코드마다 중복 저장 된다면 메모리낭비! , 변경이 힘들다.
					 신청 테이블에 매번 중복 된다.
					 
					 해결책 : 별도의 테이블로 분리하여 부모자식 관계를 맺는다.
					 
		제2 정규화 수행.
		- PK 가 두개 이상의 클럼으로 이루어져 있을 경우에 수행
		- PK 를 제외한 다른 모든 일반 컬럼은 PK컬럼 모두에 종속 되어야 한다.
		
		4. model03.exerd
		-제 3 정규화 수행.
		-PK에 종속 되지 않은 컬럼이 있다면 , 별도 테이블로 분리하여 부모-자식 관계를 맺는다.
		-	일반 컬럼이 다른 일반 컬럼에 종속 되는 경우 , 
		-학생 사진 , 학생이메일 , 학생전화 , 학생주소 ,학생학력 , 직장인여부 컬럼 모두 학생명에 종속된다.
		곧 학생사진은 학생 명이 바뀔 때 그 값이 바뀐다. 학생 이메일도 학생명이 바뀔 때 그 값이 바뀐다.
		PK에 종속 된다는 것은  PK가 바뀔때 그 값이 바뀐다는 것이다. 
		그러나
		수강신청 테이블의 경우 학생 이메일이나 학생 사진등은 수강신청 번호 보다는 학생 이름에 좌우된다.
		다른예 : 우편번호(일반컬럼)와 기본 주소(일반컬럼)와의 관계 ->
					우편번호가 바뀌면 기본주소가 바뀐다. 그러나 상세주소는 사용자가 바뀌어야만 그 값이 바뀐다.
					
					
		5. 다 대 다 관계 해소
		- DBMS는 다 대 다 관계를 구현 할 수 없다.
		- 해결책 : 관계를 저장할  테이블을 생성 한 수 1 : 다 관계로 전환한다.
		- 강사와 강의 테이블 => 강의배정 테이블을 생성한 후 1 : 다 관계로 만든다.
		
		
		용어정리 !
		-	PRIMARY KEY : 테이블에 입력된 데이터를 구분하기 위해 사용하는 한 개 이상의 컬럼.
		-	FOREIGN KEY : 다른테이블에 있는 데이터를 가리키는 그 데이터의 PK값.
			부모(PK) - 자식(FK)
			부모의 PK 값을 가지고 있다 (FK) 		
		-	관계에 대해 부모 자식 간의 대입  횟수를 지정한다.
		
		관계의 종류
		-	비식별 관계(non-identifying relationship)
		=>자식 테이블의 foreign key가 그냥 일반 컬럼으로 되어 있을 경우.
		=> 관계를 표현하는 값이 해당 테이블에서 식별자로 사용되지는 않는다는 의미.
		=> 외부키 != PK
		=> 점선으로 표시한다. (-|`````````````````````````<)
			예: 강의 -수강신청 , 강의 - 강의장
			
			
		-	식별 관계(identifying relationship)
		=>자식테이블의 foreign key가 PK로 되어 있을 경우.
		=> 관계를 표현하는 동시에 그 테이블의 식별자로 사용된다는 의미.
		=> 실선으로 표시한다. (-|--------------<)
		예 : 강사 - 강사배정 , 강의 - 강사배정
		6. 관계와 차수
		-	관계에 대해 부모 자식 간의 대입 회수를 지정한다.
		
		
		
		6.	관계와 차수
			-	관계에 대해 부모 자식 간의 대입 회수를 지정한다.
			0..1 : 0 또는 1   1=>(-|0----)
			* : 0 이상
			1 : 1
			1..* : 1 이상
			
			-부모 테이블과 관계가 0 또는 1 이라는 것은
			자식 테이블의 외부키에 null을 넣을 수 있다는 뜻이다.
			
			7. 인덱스 컬럼 지정(model01.exerd)
			1) PK는 아니지만 중복되어서는 안되는 컬럼이다.
			2) indexColumn 선정
				검색 조건에 사용하는 컬럼.
				인덱스 컬럼은 정렬한 값을 별도 메모리에 관리한다.
				인덱스 컬럼을 많이 지정 할 수록 메모리 낭비가 심해지고
				값을 변경하거나 삭제하거나 추가 할 때 마다.
				인덱스를 갱신 해야 하기 때문에 , 
				변경 , 삭제 , 추가 속도가 느리다.
				가능한 조회 위조로 사용할 테이블에 대해 인덱스를 걸도록 해라!
				
			8.NULL 허용여부!(model06.exerd)
			
			[물리 모델 작성]
			9.도메인 분류 및 컬럼에 적용(model07.exerd)
			테이블의 컬럼들을 테이터 유형과 성격에 따라 묶어서 타입을 정의한다.
			이점 : 컬럼의 타입을 변경 하기가 쉽다.
			
			10.	 테이블과 컬럼에 대해 영어 이름을 짓는다.!
				-	DBMS에서 사용할 영어 테이블 이름과 컬럼 이름을 만든다.
				-  테이블 이름은 보통 복수형으로 선택한다.
				- 여러단어로 구성된 경우 _ 로 표현한다.
				- 단어가 너무 긴 경우는 3자 ~5자 정도의 단어로 함축하여 표현한다.
				
				
				11.컬럼속성 상세정의
				-Auto_Increment , Default 등 제약조건 상세하게 저장
				
			[forward Engineering]
			-DB모델을 SQL문으로 뽑아내는 것.
			참고 : 리버스(reversEngineering)엔지니어링
			DBMS에 존재하는 테이블을 조사하여 DB모델을 뽑아내는것!
			
			
			
			
			
			
			
			
		
